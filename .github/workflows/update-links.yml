name: Update links.json from Issue

on:
  issues:
    types: [opened]

jobs:
  update-links:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Read Issue details from GITHUB_EVENT_PATH
        id: issue_details
        run: |
          echo "Reading Issue details from GITHUB_EVENT_PATH"
          ISSUE_TITLE=$(jq -r '.issue.title' $GITHUB_EVENT_PATH)
          ISSUE_BODY=$(jq -r '.issue.body' $GITHUB_EVENT_PATH)
          ISSUE_USER=$(jq -r '.issue.user.login' $GITHUB_EVENT_PATH)
          echo "Title: $ISSUE_TITLE"
          echo "Body: $ISSUE_BODY"
          echo "User: $ISSUE_USER"
          echo "::set-output name=title::$ISSUE_TITLE"
          echo "::set-output name=body::$ISSUE_BODY"
          echo "::set-output name=user::$ISSUE_USER"

      - name: Check if user is Limkon
        if: ${{ steps.issue_details.outputs.user != 'Limkon' }}
        run: |
          echo "User is not Limkon. Closing Issue."
          curl -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"state":"closed"}' \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}"
          exit 0

      - name: Debug Issue title and body
        run: |
          echo "Issue title: '${{ steps.issue_details.outputs.title }}'"
          echo "Issue body: '${{ steps.issue_details.outputs.body }}'"

      - name: Update links.json
        id: update_links
        run: |
          echo "Fetching links.json..."
          links_file="links.json"

          # Load current links.json content
          if [ ! -f "$links_file" ]; then
            echo "links.json does not exist. Creating a new one."
            echo "[]" > $links_file
          fi

          # Parse Issue data
          TITLE="${{ steps.issue_details.outputs.title }}"
          BODY="${{ steps.issue_details.outputs.body }}"

          if [[ "$TITLE" == "add" ]]; then
            # Replace all Chinese commas with English commas and split by comma
            BODY=$(echo $BODY | sed 's/ï¼Œ/,/g')
            NAME=$(echo $BODY | cut -d',' -f1)
            URL=$(echo $BODY | cut -d',' -f2)

            echo "Adding link: $NAME ($URL)"
            
            # Append the new link to the links.json
            jq --arg name "$NAME" --arg url "$URL" '. += [{"name": $name, "url": $url}]' $links_file > tmp.$$.json && mv tmp.$$.json $links_file

          elif [[ "$TITLE" == "del" ]]; then
            NAME=$BODY

            echo "Deleting link: $NAME"

            # Remove the link with the specified name from links.json
            jq --arg name "$NAME" 'del(.[] | select(.name == $name))' $links_file > tmp.$$.json && mv tmp.$$.json $links_file
          else
            echo "Invalid Issue title. Please use 'add' or 'del'."
            exit 1
          fi

      - name: Commit changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add links.json
          git commit -m "Updated links.json from Issue #${{ github.event.issue.number }}"
          git push

      - name: Close Issue
        run: |
          curl -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"state":"closed"}' \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}"

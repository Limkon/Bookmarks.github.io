name: Delete Closed Issues

on:
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  delete-issues:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt-get install -y jq curl

      - name: Run script to delete closed issues
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}  # 使用 GitHub Token Secret
        run: |
          #!/bin/bash

          # 设置 GitHub 个人访问令牌和仓库信息
          GITHUB_TOKEN="${GITHUB_TOKEN}"
          REPO="Limkon/bookmarks"  # 格式为 "owner/repo"

          PAGE=1
          PER_PAGE=100

          while : ; do
            # 获取当前页的关闭 Issues
            RESPONSE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/$REPO/issues?state=closed&per_page=$PER_PAGE&page=$PAGE")

            # 检查 API 响应是否为 JSON
            if echo "$RESPONSE" | jq empty; then
              ISSUES=$(echo "$RESPONSE" | jq -r '.[].number')
            else
              echo "Failed to retrieve issues. API response is not valid JSON."
              echo "Response: $RESPONSE"
              exit 1
            fi

            # 如果没有更多的 Issue，则退出循环
            if [ -z "$ISSUES" ]; then
              echo "No more issues to delete."
              break
            fi

            # 批量删除每个关闭的 Issue
            for ISSUE in $ISSUES; do
              echo "Deleting Issue #$ISSUE"
              RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X DELETE -H "Authorization: token $GITHUB_TOKEN" \
                "https://api.github.com/repos/$REPO/issues/$ISSUE")
              
              if [ "$RESPONSE" -ne 204 ]; then
                echo "Failed to delete Issue #$ISSUE. HTTP status code: $RESPONSE"
              else
                echo "Successfully deleted Issue #$ISSUE"
              fi
            done

            PAGE=$((PAGE + 1))
          done

          echo "Finished deleting closed issues."
